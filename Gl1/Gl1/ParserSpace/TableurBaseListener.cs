//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Tableur.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITableurListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class TableurBaseListener : ITableurListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TableurParser.sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequence([NotNull] TableurParser.SequenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TableurParser.sequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequence([NotNull] TableurParser.SequenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Insert</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert([NotNull] TableurParser.InsertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Insert</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert([NotNull] TableurParser.InsertContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Read</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead([NotNull] TableurParser.ReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Read</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead([NotNull] TableurParser.ReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Delete</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelete([NotNull] TableurParser.DeleteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Delete</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelete([NotNull] TableurParser.DeleteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Propage</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropage([NotNull] TableurParser.PropageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Propage</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropage([NotNull] TableurParser.PropageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Copy</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCopy([NotNull] TableurParser.CopyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Copy</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCopy([NotNull] TableurParser.CopyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Save</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSave([NotNull] TableurParser.SaveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Save</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSave([NotNull] TableurParser.SaveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Export</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExport([NotNull] TableurParser.ExportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Export</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExport([NotNull] TableurParser.ExportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Open</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen([NotNull] TableurParser.OpenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Open</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen([NotNull] TableurParser.OpenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Import</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport([NotNull] TableurParser.ImportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Import</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport([NotNull] TableurParser.ImportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Quit</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuit([NotNull] TableurParser.QuitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Quit</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuit([NotNull] TableurParser.QuitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Help</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHelp([NotNull] TableurParser.HelpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Help</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHelp([NotNull] TableurParser.HelpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ToMult</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToMult([NotNull] TableurParser.ToMultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ToMult</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToMult([NotNull] TableurParser.ToMultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus([NotNull] TableurParser.PlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus([NotNull] TableurParser.PlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinus([NotNull] TableurParser.MinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinus([NotNull] TableurParser.MinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Div</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiv([NotNull] TableurParser.DivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Div</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiv([NotNull] TableurParser.DivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ToUnary</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToUnary([NotNull] TableurParser.ToUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ToUnary</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToUnary([NotNull] TableurParser.ToUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMod([NotNull] TableurParser.ModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMod([NotNull] TableurParser.ModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Mult</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMult([NotNull] TableurParser.MultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Mult</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMult([NotNull] TableurParser.MultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReverseSign</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReverseSign([NotNull] TableurParser.ReverseSignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReverseSign</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReverseSign([NotNull] TableurParser.ReverseSignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NotReverse</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotReverse([NotNull] TableurParser.NotReverseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NotReverse</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotReverse([NotNull] TableurParser.NotReverseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ToAtom</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToAtom([NotNull] TableurParser.ToAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ToAtom</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToAtom([NotNull] TableurParser.ToAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Parentheses</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParentheses([NotNull] TableurParser.ParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Parentheses</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParentheses([NotNull] TableurParser.ParenthesesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ToFunc</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToFunc([NotNull] TableurParser.ToFuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ToFunc</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToFunc([NotNull] TableurParser.ToFuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Reference</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReference([NotNull] TableurParser.ReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Reference</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReference([NotNull] TableurParser.ReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Value</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] TableurParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Value</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] TableurParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TableurParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] TableurParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TableurParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] TableurParser.FunctionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
