//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Tableur.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TableurParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface ITableurVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TableurParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSequence([NotNull] TableurParser.SequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Insert</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInsert([NotNull] TableurParser.InsertContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Read</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRead([NotNull] TableurParser.ReadContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Delete</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDelete([NotNull] TableurParser.DeleteContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Propage</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropage([NotNull] TableurParser.PropageContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Copy</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopy([NotNull] TableurParser.CopyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Save</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSave([NotNull] TableurParser.SaveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Export</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExport([NotNull] TableurParser.ExportContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Open</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpen([NotNull] TableurParser.OpenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Import</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImport([NotNull] TableurParser.ImportContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Quit</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuit([NotNull] TableurParser.QuitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Help</c>
	/// labeled alternative in <see cref="TableurParser.instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHelp([NotNull] TableurParser.HelpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ToMult</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitToMult([NotNull] TableurParser.ToMultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlus([NotNull] TableurParser.PlusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="TableurParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinus([NotNull] TableurParser.MinusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Div</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDiv([NotNull] TableurParser.DivContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ToUnary</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitToUnary([NotNull] TableurParser.ToUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMod([NotNull] TableurParser.ModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Mult</c>
	/// labeled alternative in <see cref="TableurParser.multdivmod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMult([NotNull] TableurParser.MultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReverseSign</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReverseSign([NotNull] TableurParser.ReverseSignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotReverse</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotReverse([NotNull] TableurParser.NotReverseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ToAtom</c>
	/// labeled alternative in <see cref="TableurParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitToAtom([NotNull] TableurParser.ToAtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Parentheses</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentheses([NotNull] TableurParser.ParenthesesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ToFunc</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitToFunc([NotNull] TableurParser.ToFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Reference</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReference([NotNull] TableurParser.ReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Value</c>
	/// labeled alternative in <see cref="TableurParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] TableurParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TableurParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] TableurParser.FunctionContext context);
}
